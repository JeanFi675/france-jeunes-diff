---
export interface Props {
  level?: 1 | 2 | 3 | 4;
  shadow?: boolean;
  glitch?: boolean;
  rotation?: number;
  noShadow?: boolean;
  textColor?: 'white' | 'black' | 'mint';
  class?: string;
  style?: string;
}

const { 
  level = 1, 
  shadow = false, 
  glitch = false, 
  rotation = -1,
  noShadow = false,
  textColor,
  class: className = '',
  style: customStyle = ''
} = Astro.props;

const Tag = `h${level}` as const;
const baseClass = 'brutal-heading';
const shadowClass = shadow ? 'brutal-title' : '';
const glitchClass = glitch ? 'brutal-glitch' : '';
const noShadowClass = noShadow ? 'no-text-shadow' : '';
const colorClass = textColor ? `text-color-${textColor}` : '';
const classes = `${baseClass} ${shadowClass} ${glitchClass} ${noShadowClass} ${colorClass} ${className}`.trim();
---

<Tag 
  class={classes}
  style={`transform: rotate(${rotation}deg); ${customStyle}`}
>
  <slot />
</Tag>

<style>
  .brutal-heading {
    font-family: 'Inter', 'Arial', sans-serif;
    font-weight: 800;
    text-transform: uppercase;
    letter-spacing: -0.01em;
    line-height: 0.9;
  }
  
  .brutal-glitch {
    animation: glitch 3s infinite;
  }
  
  .brutal-glitch:hover {
    animation-duration: 0.3s;
  }

  .no-text-shadow {
    text-shadow: none !important;
  }

  .text-color-white {
    color: var(--brutal-white);
  }

  .text-color-black {
    color: var(--brutal-black);
  }

  .text-color-mint {
    color: var(--brutal-ice);
  }
</style>